# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  # desc "Description of what the lane does"
  # lane :custom_lane do
  #   # add actions here: https://docs.fastlane.tools/actions
  # end

    desc "Run unit tests"
    lane :tests do
      run_tests(
        scheme: "Moments",
        output_directory: "./fastlane/dist",
        output_types: "html",
        buildlog_path: "./fastlane/dist"
      )
    end

    desc "Lint and format code" 
    lane :code_format do
      swiftlint(
        mode: :autocorrect,
        executable: "./Pods/SwiftLint/swiftlint",  # Important if you've installed it via CocoaPods
        config_file: './Moments/.swiftlint.yml',
        raise_if_swiftlint_error: true)
    end
    
    desc "Lint code" 
    lane :code_lint do 
      swiftlint(
        mode: :lint,
        executable: "./Pods/SwiftLint/swiftlint",  # Important if you've installed it via CocoaPods
        config_file: './Moments/.swiftlint.yml',
        raise_if_swiftlint_error: true)
    end

    desc "Sort Xcode project files"
    lane :sort_files do
      sh "../scripts/sort-Xcode-project-file.pl ../Moments/Moments.xcodeproj"
    end

    desc "Create an archive of the Internal app for testing"
    lane :archive_internal do
      puts("create an archive for Internal app for testing")
      sync_code_signing(type: "appstore")
      build_app(scheme: "Internal",
                workspace: "Moments.xcworkspace",
                xcargs: "-allowProvisioningUpdates")
      upload_to_testflight
    end

    desc 'Creates an archive of the Production app with Appstore distribution'
    lane :archive_appstore do
      puts("Create an archive for AppStore submission")
      build_app(scheme: "AppStore",
            workspace: "Moments.xcworkspace",
            xcargs: "-allowProvisioningUpdates")
    end
end
